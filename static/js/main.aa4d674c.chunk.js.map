{"version":3,"sources":["logo.svg","Alert.js","MainPage.js","InMemoryApp.js","Lists.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","useState","inputValue","input","setInput","visible","className","children","type","name","value","onChange","e","target","onClick","onClose","cancelName","onOk","okName","ListsDisplay","showAlert","setShowAlert","list","id","src","title","stopPropagation","setData","data","filter","listName","Object","assign","MainPage","map","x","onListClick","length","listItems","DATA","text","completed","ListsItemDisplay","listitem","checked","setChecked","item","listItemText","console","log","Lists","y","listItemName","newListItems","App","selectedPage","setPage","n","selectedId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa4d674c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {useState} from \"react\";\n\nfunction Alert(props) {\n    let [input, setInput] = useState(props.inputValue);\n    if (!props.visible){\n        return null;\n    }\n    return (\n        <div className={\"backdrop\"}>\n            <div className=\"modal\">\n                {props.children}\n                <input type=\"text\" name=\"name\" value={input}\n                       onChange={(e) => setInput(e.target.value)}/>\n                <div className=\"alert-buttons\">\n                    <button className={\"alert-button alert-cancel\"} type={\"button\"}\n                            onClick={props.onClose}>\n                        {props.cancelName}\n                    </button>\n                    <button className={\"alert-button alert-ok\"} type={\"button\"}\n                            onClick={() => {\n                                setInput(\"\");\n                                props.onOk(input);\n                                props.onClose();}}>\n                        {props.okName}\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Alert;","import './main.css'\nimport React, {useState} from \"react\";\nimport Alert from \"./Alert\";\n\nfunction ListsDisplay(props) {\n    const [showAlert, setShowAlert] = useState(false);\n    function handleAlertOK(listName) {\n        props.list.title = listName;\n        props.setData(Object.assign([], props.data))\n    }\n    function handleDelete(e) {\n        e.stopPropagation()\n        props.setData(props.data.filter((list) => list.id !== props.list.id))\n    }\n\n    return (\n        <>\n            <div onClick={() => props.onClick(props.list.id)} className=\"boxes\" id=\"list-box-1\">\n                <img src=\"list-solid.svg\"/>\n                <span>{props.list.title}</span>\n                <div className={\"edit-delete-button-container\"}>\n                    <img className=\"edit-delete-button\" onClick={(e) => {\n                        e.stopPropagation()\n                        setShowAlert(true)\n                    }} src={\"edit-solid.svg\"}/>\n                    <img className=\"edit-delete-button\" onClick={handleDelete} src={\"times-solid.svg\"}></img>\n                </div>\n\n            </div>\n            <Alert inputValue={props.list.title} visible={showAlert} onClose={() => setShowAlert(false)} onOk={handleAlertOK} cancelName={\"Don't Edit List\"} okName={\"Edit List\"}>\n                <div>Edit List:</div>\n            </Alert>\n        </>\n    )\n}\n\nfunction MainPage(props) {\n    const [showAlert, setShowAlert] = useState(false);\n\n    function handleAlertOK(listName) {\n        props.setData([...props.data, {\n                id: props.data.length,\n                title: listName,\n                listItems: []\n            }\n            ]\n        )\n    }\n\n    return (\n        <>\n            <h1 id=\"MyLists\">My Lists</h1>\n            {props.data.map((x) => <ListsDisplay setData={props.setData} data={props.data} list={x} onClick={props.onListClick}/>)}\n            <div id=\"button1\">\n                <button onClick={() => setShowAlert(true)} className=\"addList addTask\">\n                    <img src=\"plus-solid.svg\"/>\n                    <span>Add List</span>\n                </button>\n            </div>\n            <Alert inputValue={\"\"} visible={showAlert} onClose={() => setShowAlert(false)} onOk={handleAlertOK} cancelName={\"Don't Add List\"} okName={\"Add List\"}>\n                <div>Add List:</div>\n            </Alert>\n        </>\n    )\n}\n\nexport default MainPage;","// functions in here\n// where we modify data\nconst DATA =\n    [\n        {\n            id: 0,\n            title: \"To Do\",\n            listItems: [\n                {\n                    id: 0,\n                    text:\"Order sd card on Amazon\",\n                    completed: false\n                },\n                {\n                    id: 1,\n                    text:\"Call Mom\",\n                    completed: false\n                },\n                {\n                    id: 2,\n                    text: \"Text John\",\n                    completed: false\n                }\n               ]\n        },\n        {\n            id: 1,\n            title: \"Task\",\n            listItems: [{\n                id: 0,\n                text: \"Buy new John Grisham Book\",\n                completed: false\n            }]\n        },\n    ]\n\n\nexport default DATA;","import \"./main.css\"\nimport {Data} from \"./InMemoryApp\"\nimport React, {useEffect, useState, useMemo} from \"react\";\nimport Alert from \"./Alert\";\n\nfunction ShowEditAlert(props) {\n    props.setCurrentTask(props.listitem.id)\n    props.setShowEditAlert(true)\n}\n\nfunction ListsItemDisplay(props){\n    const [checked, setChecked] = useState(props.listitem.completed)\n    const [showAlert, setShowAlert] = useState(false);\n\n    function handleAlertOKListItem(listItemText) {\n        console.log(listItemText)\n        props.listitem.text = listItemText;\n        props.setData(Object.assign([], props.data))\n    }\n    function handleDelete(e) {\n        e.stopPropagation()\n        props.list.listItems = props.list.listItems.filter((item) => item.id !== props.listitem.id)\n        props.setData(Object.assign([], props.data))\n    }\n\n    return (\n        <div id=\"box1\" className=\"boxes boxes-blue\">\n            <input checked={checked} type=\"checkbox\" onChange={() => {\n                props.listitem.completed = !props.listitem.completed\n                setChecked(props.listitem.completed)\n                props.setData(Object.assign([], props.data))\n            }}/>\n            <label>{props.listitem.text}</label><br/>\n            <div className={\"edit-delete-button-container\"}>\n            <img className=\"edit-delete-button\" onClick={() => setShowAlert(true)} src={\"edit-solid.svg\"}></img>\n            <img className=\"edit-delete-button\" onClick={handleDelete} src={\"times-solid.svg\"}></img>\n            </div>\n            <Alert visible={showAlert} inputValue={props.listitem.text} onClose={() => setShowAlert(false)} onOk={handleAlertOKListItem} cancelName={\"Don't Edit Task\"} okName={\"Edit Task\"}>\n                <div>Edit Task:</div>\n            </Alert>\n        </div>\n    )\n}\n\nfunction Lists(props)\n{\n    const [showAlert, setShowAlert] = useState(false);\n\n    function handleAlertOKListItem(listItemName) {\n        updateListItems([...props.list.listItems,\n            {\n                id: props.list.listItems.length,\n                text: listItemName,\n                completed: false\n            }\n        ]);\n    }\n    function updateListItems(newListItems){\n        props.setData(props.data.map(list => {\n            if (list.id === props.list.id) {\n                list.listItems = newListItems\n            }\n            return list;\n        }))\n    }\n    return (\n        <>\n            <h1>{props.list.title}</h1>\n            {\n                props.list.listItems\n                    .filter((x) => !x.completed)\n                    .map((y) => <ListsItemDisplay list={props.list} key={y.id} setData={props.setData} data={props.data} listitem={y}/>)}\n            <hr/>\n            <h3>Completed:</h3>\n            {\n            props.list.listItems\n                .filter((x) => x.completed)\n                .map((y) => <ListsItemDisplay list={props.list} key={y.id} setData={props.setData} data={props.data} listitem={y}/>)}\n            <div id=\"button1\">\n                <button onClick={() => {setShowAlert(true)}} className=\"addTask\">\n                    <img src=\"plus-solid.svg\"/>\n                    <span>Add Task</span>\n                </button>\n            </div>\n            <Alert visible={showAlert}  onClose={() => setShowAlert(false)} onOk={handleAlertOKListItem} cancelName={\"Don't Add Task\"} okName={\"Add Task\"}>\n                <div>Add Task:</div>\n            </Alert>\n        </>\n    )\n}\n\nexport default Lists;","import logo from './logo.svg';\nimport './App.css';\nimport './AlertApp.css';\nimport React, {useState} from \"react\";\nimport MainPage from './MainPage'\nimport Lists from \"./Lists\";\nimport DATA from \"./InMemoryApp\";\n\nfunction App() {\n    const [showAlert, setShowAlert] = useState(false);\n    const [showEditAlert, setShowEditAlert] = useState(false);\n    let [currentTask, setCurrentTask] = useState(\"\");\n    let [data, setData] = useState(DATA);\n    let [listId, setListId] = useState(0);\n    let [selectedPage, setPage] = useState({\n        type: \"home\"\n    })\n\n    const pageRenderLookup = {\n        \"home\": (\n                <MainPage setData={setData} data={data} onListClick={(n) => setPage({\n                    type: \"list\",\n                    selectedId: n\n                })}/>\n        ),\n        \"list\": (\n            <>\n                <img onClick={() => setPage({type: \"home\"})} src={\"long-arrow-alt-left-solid.svg\"} className={\"back-arrow\"}/>\n                <Lists setData={setData} data={data} list={data[selectedPage.selectedId]}/>\n            </>\n        )\n    }\n    return pageRenderLookup[selectedPage.type]\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  //  start first component to start going (App.js)\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}